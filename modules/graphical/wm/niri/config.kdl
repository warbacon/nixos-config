// Autostart
spawn-at-startup "watch-background"
// spawn-at-startup "wl-clip-persist" "--clipboard" "regular"

// Miscellaneous
prefer-no-csd
screenshot-path "~/Im√°genes/Capturas de pantalla/Captura desde %Y-%m-%d %H-%M-%S.png"

// Environment variables
environment {
    DISPLAY ":0"
}

// Input device configuration
input {
    keyboard {
        xkb {
            layout "es"
        }

        // Windows-like repeat rate
        repeat-rate 31
    }

    touchpad {
        // tap
        dwt
        natural-scroll
        click-method "clickfinger"
    }

    mouse {
        accel-profile "flat"
    }

    focus-follows-mouse max-scroll-amount="0%"
}

// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
output "eDP-1" {
    scale 2
    position x=0 y=0
}

output "LG Electronics LG ULTRAGEAR 102NTZNG9205" {
    scale 1
    variable-refresh-rate
    position x=-560 y=-1440
}

layout {
    gaps 10

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    default-column-width { proportion 0.5; }

    focus-ring {
        off
        width 2

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
        active-color "#449dab"

        // Color of the ring on inactive monitors.
        inactive-color "#424b6b"
    }

    border {
        width 2
        active-color "#449dab"
        inactive-color "#424b6b"
        urgent-color "#f7768e"
    }

    // You can enable drop shadows for windows.
    shadow {
        on

        // Softness controls the shadow blur radius.
        softness 30

        // Spread expands the shadow.
        spread 5

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // You can also change the shadow color and opacity.
        color "#0007"
    }
}

overview {
    backdrop-color "#1A1B26"
}

hotkey-overlay {
    skip-at-startup
}

debug {
    honor-xdg-activation-with-invalid-serial
}

window-rule {
    geometry-corner-radius 0
    clip-to-geometry false
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
    default-floating-position x=32 y=32 relative-to="bottom-right"

    border {
        on
    }

    focus-ring {
        off
    }
}

layer-rule {
    match namespace="rofi"
    match namespace="notifications"

    shadow {
        on
        spread 1
        softness 15
        color "#0005"
    }
}

layer-rule {
    match namespace="rofi"
    geometry-corner-radius 10
}

layer-rule {
    match namespace="notifications"
    geometry-corner-radius 8
}

binds {
    // Hotkey overlay
    Mod+Shift+Apostrophe { show-hotkey-overlay; }

    // Applications
    Mod+Q repeat=false { spawn "footclient"; }
    Mod+D { spawn "rofi" "-show" "drun" "-show-icons"; }
    Mod+E { spawn "nautilus"; }
    Mod+P { spawn "command_palette"; }
    Mod+Period { spawn "rofimoji" "--prompt" "Emojis"; }
    Mod+V hotkey-overlay-title="Open clipboard manager" { spawn "bash" "-c" "cliphist list | rofi -dmenu -display-columns 2 -p Portapapeles | cliphist decode | wl-copy"; }
    Mod+B hotkey-overlay-title="Open bluetui" { spawn "bash" "-c" "killall -s1 bluetui || footclient -e bluetui"; }

    // Audio
    XF86AudioRaiseVolume allow-when-locked=true { spawn "change_volume" "up"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "change_volume" "down"; }
    XF86AudioMute        allow-when-locked=true { spawn "change_volume" "muteaudio"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "change_volume" "mutemic"; }

    // Brightness
    XF86MonBrightnessUp allow-when-locked=true { spawn "change_brightness" "up"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "change_brightness" "down"; }

    // Screenshots
    Print { screenshot-screen; }
    Shift+Print { screenshot; }
    Alt+Print { screenshot-window; }

    // Quit
    Mod+Shift+E { quit; }

    // Workspaces
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-window-to-workspace 1; }
    Mod+Shift+2 { move-window-to-workspace 2; }
    Mod+Shift+3 { move-window-to-workspace 3; }
    Mod+Shift+4 { move-window-to-workspace 4; }
    Mod+Shift+5 { move-window-to-workspace 5; }
    Mod+Shift+6 { move-window-to-workspace 6; }
    Mod+Shift+7 { move-window-to-workspace 7; }
    Mod+Shift+8 { move-window-to-workspace 8; }
    Mod+Shift+9 { move-window-to-workspace 9; }

    // Window management
    Mod+C repeat=false { close-window; }

    Mod+Tab repeat=false { toggle-overview; }

    Mod+H           { focus-column-left; }
    Mod+L           { focus-column-right; }
    Mod+Left        { focus-column-left; }
    Mod+Right       { focus-column-right; }

    Mod+J           { focus-window-down; }
    Mod+K           { focus-window-up; }
    Mod+Down        { focus-window-down; }
    Mod+Up          { focus-window-up; }

    Mod+Ctrl+H      { move-column-left; }
    Mod+Ctrl+Left   { move-column-left; }
    Mod+Ctrl+L      { move-column-right; }
    Mod+Ctrl+Right  { move-column-right; }

    Mod+Ctrl+J      { move-window-down; }
    Mod+Ctrl+K      { move-window-up; }
    Mod+Ctrl+Down   { move-window-down; }
    Mod+Ctrl+Up     { move-window-up; }

    Mod+Home        { focus-column-first; }
    Mod+End         { focus-column-last; }
    Mod+Ctrl+Home   { move-column-to-first; }
    Mod+Ctrl+End    { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-workspace-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-workspace-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-workspace-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-workspace-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-workspace-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-workspace-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-workspace-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight       { focus-column-right; }
    Mod+WheelScrollLeft        { focus-column-left; }
    Mod+Ctrl+WheelScrollRight  { move-column-right; }
    Mod+Ctrl+WheelScrollLeft   { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Less  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Shift+Less { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+Shift+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Plus { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Plus { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Space       { toggle-window-floating; }
    Mod+Shift+Space { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }
}
